<#
.DESCRIPTION
	BACKUP-REMINDER Version: 1.0-BETA2

	This script works together with ntfs-hardlink-backup and reminds the user if the last backup was faulty, a backup is overdue or no backup was set up at all.
	
.SYNOPSIS
	c:\full\path\bat\backup-reminder.ps1 <Options>
.PARAMETER statusFile
	Path to XML status file generated by ntfs-hardlink-backup
.PARAMETER overdueTimespan
	Number of days after that the backup is considered overdue
.PARAMETER backupSources
	List of folders to check for existens before showing the reminder. If None of the folders exists, no reminder is shown
	
.NOTES
	Author: Artur Neumann *INFN*
#>

[cmdletbinding()]
param (
	[parameter(mandatory = $true)]
	$statusFile,
	[Parameter(Mandatory=$False)]
	[Int32]$overdueTimespan,
	[Parameter(Mandatory=$False)]
	[String[]]$backupSources
)

if ($overdueTimespan -eq 0) {
	$overdueTimespan=4
}
if ([string]::IsNullOrEmpty($backupSources)) {
	$backupSourcesExists=$True
} else {
	$backupSourcesExists=$False
	foreach ($backupSource in $backupSources) {
		if (Test-Path $backupSource) {
			$backupSourcesExists=$True
			break
		}
	}
}

if ($backupSourcesExists -eq $False) {
	exit
}
$scriptPath = Split-Path -parent $MyInvocation.MyCommand.Definition


. $scriptPath/backup-reminder-text.ps1

$wshell = New-Object -ComObject Wscript.Shell -ErrorAction Stop

If (!(Test-Path $statusFile)){
	$wshell.Popup($text['no status file'],0,"NO BACKUP!",48+4096)
	exit
}

[xml]$backupStatus = Get-Content $statusFile

if ($backupStatus.NTFSHARDLINKBACKUP.STATUS -ne "OK") {
	$wshell.Popup($text['last backup failed'],0,"BACKUP FAILURE!",48+4096)
	exit
}

$lastRun=[DateTime]::Parse($backupStatus.NTFSHARDLINKBACKUP.LASTRUN)
$now=(Get-Date)
$timespan=NEW-TIMESPAN -Start $lastRun -End $now
$timespan=[math]::floor($timespan.TotalDays)
if ($timespan -gt $overdueTimespan) {
	$wshell.Popup([string]::Format( $text['backup to old'], $timespan),0,"BACKUP TO OLD!",48+4096)
}
